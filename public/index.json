[
{
	"uri": "/ssh/",
	"title": "SSH",
	"tags": [],
	"description": "",
	"content": " Secure Shell Mit Hilfe der Secure Shell (SSH) kann mann sich mit der Console des Raspberry Pi verbinden und Linux-Befehle auf dem pi ausführen.\n Konfiguration  Um sich mit dem pi zu verbinden, ohne ein passwort eingeben zu müssen. Muss zunächst eine Verschlüsselung eingerichtet werden. Hierzu gibt es je Verbindung einen öffentlichen und einen privaten schlüssel. Der öffentliche Schlüssel muss auf dem pi hinterlegt werden, wohingegen der private auf dem PC/Gerät verbleibt mit dem die Verbindung zu pi aufgebaut werden soll. Zum generieren der Schlüssel gibt es verschiedene möglichkeiten Schlüssen mit \u0026ldquo;putty\u0026rdquo; erstelen. In der Programmsammlung von putty ist auch ein Key-Generator enthalte \u0026lsquo;puttygen.\n "
},
{
	"uri": "/ssh/configuration/",
	"title": "Konfiguration",
	"tags": [],
	"description": "",
	"content": " Um sich mit dem pi zu verbinden, ohne ein passwort eingeben zu müssen. Muss zunächst eine Verschlüsselung eingerichtet werden. Hierzu gibt es je Verbindung einen öffentlichen und einen privaten schlüssel. Der öffentliche Schlüssel muss auf dem pi hinterlegt werden, wohingegen der private auf dem PC/Gerät verbleibt mit dem die Verbindung zu pi aufgebaut werden soll.\nZum generieren der Schlüssel gibt es verschiedene möglichkeiten\nSchlüssen mit \u0026ldquo;putty\u0026rdquo; erstelen. In der Programmsammlung von putty ist auch ein Key-Generator enthalte \u0026lsquo;puttygen.exe\u0026rsquo;. Mit diesem lässt sich ein öffentlicher (kommte auf den pi) und ein privater (verbleibt auf dem Gerät) erstellt werden.\nöffentlichen Schlüssel auf pi übertragen Zunächst müssen wir und auf dem pi mit dem Benutzer anmelder, unter dem später auch die Verbindung laufen soll. In unserem Fall melden wir auns also unter pi an. Für diesen Benutzer müssen wir zunächst in seinem Homeverzeichniss einen Ordner und eine Datei erstellen.\n$ mkdir ~/.ssh $ touch ~/.ssh/authorized_keys  Jetzt öffnen wir diesen datei nano ~/.ssh/authorized_keys und kopieren den Inhal des public key hinein. Dabei müssen wir darauf achten, dass alles in einer Zeile geschrieben steht.\nFür Olaf mit --text läst sich ein Befehl für copy-und paste freigeben.\n"
},
{
	"uri": "/docker/rpi-hugo/",
	"title": "rpi-hugo",
	"tags": [],
	"description": "hugo docker image für raspberry pi",
	"content": " Docker Image mit Hugo v2.6 für Raspberry pi Unter [DockerHub] finden sich jede Menge gut images für Docker. Darunter finden sich auch einige, die bereits für den Raspberry übersetzt wurden, denn standartmäßig ist alles nur für Linux 64bit systeme gedacht. Die Gruppe hypriot hat schon seit einigen Jahren sich mit dem Thema Docker ung Raspberry auseinander gesetzt. So findet sich unter dockerhub/hypriot einige tolle repos.\nDarunter war auch ein repo für hypriot/rpi-hugo . Doch leider musste ich schnell feststellen, dass es zu alt ist und seit zwei Jaren auf Version 0.14 stehengeblieben ist. Zum Glück ist alles open-Source und so fand sich im Github reousitory alle nötigen dateien um ein neues image mit version v2.6 zu erstellen. Damit auch andere user etwas davon haben, habe ich es unter grembold/rpi-hugo wieder in DockerHub abgelegt.\nHier die wichtigsten befehle für das rpi-hugo repo:\nhugo webseite initialisieren mkdir myblog \u0026amp;\u0026amp; cd myblog docker run -rm -v $(pwd):/www grembold/rpi-hugo new site .  Mit dem ersten Befehl wird ein Verzeichniss erstellt, dindem später alle Dateien für die Webseite gesammelt werden. Mit dem zweiten Befehl wird das docker image ausgeführt und hugo erstellt im aktuellen Verzeichniss alle nöätigen Dateien und Ordner. Der Befehl -rm löscht den container nach dem ausführen gleich wieder. Mit -v $(pwd):/www wird das aktuelle Arbeitsverzeichniss als Volume in den docker container eingehängt. Die kryptische Anweisung $(pwd) ist dabei eine Umgebungsvariable von linux. Mit echo $(pwd) kann man sich den Inhalt anzeigen lassen.\nhugo webseite generieren docker run -rm -v $(pwd):/www grembold/rpi-hugo  Dieser Befehl generiert nun aus den Inhalten unter myblog/content/ die HTML-Seiten und legt alle benötigten daten unter myblog/public ab.\nhugo webseite testen docker run -d -p 1313:1313 -v $(pwd):/www hypriot/rpi-hugo server -b http://\u0026lt;ip-of-your-rpi\u0026gt;/ --bind=0.0.0.0 -w -D  Hiermit lässt sich die Webseite vorher einmal testen. Dabei werden durch die Option -D auch Seiten generiert die noch als Entwurf draft=truegekennzeichnet sind generiert.\n"
},
{
	"uri": "/web/intro.de/",
	"title": "Einführung",
	"tags": [],
	"description": "",
	"content": "  Aenean ornare velit lacus, ac varius enim ullamcorper eu. Proin aliquam facilisis ante interdum congue. Integer mollis, nisl amet convallis, porttitor magna ullamcorper, amet egestas mauris. Ut magna finibus nisi nec lacinia. Nam maximus erat id euismod egestas. By the way, check out my awesome work.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Duis dapibus rutrum facilisis. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Etiam tristique libero eu nibh porttitor fermentum. Nullam venenatis erat id vehicula viverra. Nunc ultrices eros ut ultricies condimentum. Mauris risus lacus, blandit sit amet venenatis non, bibendum vitae dolor. Nunc lorem mauris, fringilla in aliquam at, euismod in lectus. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. In non lorem sit amet elit placerat maximus. Pellentesque aliquam maximus risus, vel sed vehicula.\n"
},
{
	"uri": "/web/intro/",
	"title": "Intro",
	"tags": [],
	"description": "",
	"content": "  Aenean ornare velit lacus, ac varius enim ullamcorper eu. Proin aliquam facilisis ante interdum congue. Integer mollis, nisl amet convallis, porttitor magna ullamcorper, amet egestas mauris. Ut magna finibus nisi nec lacinia. Nam maximus erat id euismod egestas. By the way, check out my awesome work.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Duis dapibus rutrum facilisis. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Etiam tristique libero eu nibh porttitor fermentum. Nullam venenatis erat id vehicula viverra. Nunc ultrices eros ut ultricies condimentum. Mauris risus lacus, blandit sit amet venenatis non, bibendum vitae dolor. Nunc lorem mauris, fringilla in aliquam at, euismod in lectus. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. In non lorem sit amet elit placerat maximus. Pellentesque aliquam maximus risus, vel sed vehicula.\n"
},
{
	"uri": "/web/work.de/",
	"title": "Arbeit",
	"tags": [],
	"description": "",
	"content": "  Adipiscing magna sed dolor elit. Praesent eleifend dignissim arcu, at eleifend sapien imperdiet ac. Aliquam erat volutpat. Praesent urna nisi, fringila lorem et vehicula lacinia quam. Integer sollicitudin mauris nec lorem luctus ultrices.\nNullam et orci eu lorem consequat tincidunt vivamus et sagittis libero. Mauris aliquet magna magna sed nunc rhoncus pharetra. Pellentesque condimentum sem. In efficitur ligula tate urna. Maecenas laoreet massa vel lacinia pellentesque lorem ipsum dolor. Nullam et orci eu lorem consequat tincidunt. Vivamus et sagittis libero. Mauris aliquet magna magna sed nunc rhoncus amet feugiat tempus.\n"
},
{
	"uri": "/web/work/",
	"title": "Work",
	"tags": [],
	"description": "",
	"content": "  Adipiscing magna sed dolor elit. Praesent eleifend dignissim arcu, at eleifend sapien imperdiet ac. Aliquam erat volutpat. Praesent urna nisi, fringila lorem et vehicula lacinia quam. Integer sollicitudin mauris nec lorem luctus ultrices.\nNullam et orci eu lorem consequat tincidunt vivamus et sagittis libero. Mauris aliquet magna magna sed nunc rhoncus pharetra. Pellentesque condimentum sem. In efficitur ligula tate urna. Maecenas laoreet massa vel lacinia pellentesque lorem ipsum dolor. Nullam et orci eu lorem consequat tincidunt. Vivamus et sagittis libero. Mauris aliquet magna magna sed nunc rhoncus amet feugiat tempus.\n"
},
{
	"uri": "/web/",
	"title": "web",
	"tags": [],
	"description": "",
	"content": "A bunch of Shortcodes are available with this theme :\nMonitoren wie lange der eingene Server verfügbar war Beispiel trashserver.net UpTimeRobot\nWeb Server Survey\n(FreeFileSync)[https://www.freefilesync.org/] solte ich mir mal ansehen, um die Daten mit der NAS bazugleichen.\nSo, damit ich das nicht immer wieder vergesse. Im Repository dieser webseite sind die Themes als git submoldule eingebunden. Damit die aktuallisiert werden , muss folgenden ausgeführt werden\ngit submodule foreach git pull  Will man ein neues theme hinzufügen, som muss man mit $ git submodule add https://github.com/sethmacleod/docdock.git themes/docock in das eigene repository laden und anschließend in die initgit.sh integrieren $ git submodule init $ git submodule update\n Einführung  \n Intro  \n Arbeit  \n Work  Adipiscing magna sed dolor elit. Praesent eleifend dignissim arcu, at eleifend sapien imperdiet ac. Aliquam erat volutpat. Praesent urna nisi, fringila lorem et vehicula lacinia quam. Integer sollicitudin mauris nec lorem luctus ultrices. Nullam et orci eu lorem consequat tincidunt vivamus et sagittis libero. Mauris aliquet magna magna sed nunc rhoncus pharetra. Pellentesque condimentum sem. In efficitur ligula tate urna. Maecenas laoreet massa vel lacinia pellentesque lorem ipsum dolor.\n Über  \n About  \n "
},
{
	"uri": "/web/about.de/",
	"title": "Über",
	"tags": [],
	"description": "",
	"content": "  Lorem ipsum dolor sit amet, consectetur et adipiscing elit. Praesent eleifend dignissim arcu, at eleifend sapien imperdiet ac. Aliquam erat volutpat. Praesent urna nisi, fringila lorem et vehicula lacinia quam. Integer sollicitudin mauris nec lorem luctus ultrices. Aliquam libero et malesuada fames ac ante ipsum primis in faucibus. Cras viverra ligula sit amet ex mollis mattis lorem ipsum dolor sit amet.\n"
},
{
	"uri": "/web/about/",
	"title": "About",
	"tags": [],
	"description": "",
	"content": "  Lorem ipsum dolor sit amet, consectetur et adipiscing elit. Praesent eleifend dignissim arcu, at eleifend sapien imperdiet ac. Aliquam erat volutpat. Praesent urna nisi, fringila lorem et vehicula lacinia quam. Integer sollicitudin mauris nec lorem luctus ultrices. Aliquam libero et malesuada fames ac ante ipsum primis in faucibus. Cras viverra ligula sit amet ex mollis mattis lorem ipsum dolor sit amet.\n"
},
{
	"uri": "/docker/",
	"title": "docker",
	"tags": [],
	"description": "",
	"content": " Docker Also auf dem Raspberry Pi lässt sich zum Glück inzwischen auch docker und auch swarm ausführen.\nDabei ist zu beachten dass die images aus  DockerHub Auf dieser Seite möchte ich Anleitungen für verschiedene Bastelprojekte von mir dokumentieren.\n"
},
{
	"uri": "/",
	"title": "DocDock für Blume",
	"tags": [],
	"description": "",
	"content": " Olafs Dokumentation für PC und Pastelprojekte Auf dieser Seite möchte ich Anleitungen für verschiedene Bastelprojekte von mir dokumentieren.\nVileicht nutze ich einen Teil als block, um den zeitlichen Fortschritt zu dokumentieren und später daraus Tutorials oder Anleitungen zu erstellen.\nDokumentations Webseite Diese Dokumentation ist eine mit hugo statisch generierte Webseite: mit dem Einfachen Befehl hugo\nAutomated deployments Automatically published and hosted thanks to Netlify.\nRead more about Automated HUGO deployments with Netlify\n Netlify builds, deploys, and hosts frontends.  "
},
{
	"uri": "/_header/",
	"title": "header",
	"tags": [],
	"description": "",
	"content": "Blume Dokumentation\n"
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/impressum/",
	"title": "Impressum",
	"tags": [],
	"description": "Verantwortlich für dieses Angebot gemäß § 5 TMG / § 55 RStV",
	"content": " Impressum Verantwortlich für dieses Angebot gemäß § 5 TMG / § 55 RStV: Olaf Blume Franz-Schubert-Str. 2 21365 Adendorf\nemail: olaf-petersen@qmx.de\nHaftung für Links Unser Angebot enth\u0026auml;lt Links zu externen Webseiten Dritter, auf deren Inhalte wir keinen Einfluss haben. Deshalb k\u0026ouml;nnen wir f\u0026uuml;r diese fremden Inhalte auch keine Gew\u0026auml;hr \u0026uuml;bernehmen. F\u0026uuml;r die Inhalte der verlinkten Seiten ist stets der jeweilige Anbieter oder Betreiber der Seiten verantwortlich. Die verlinkten Seiten wurden zum Zeitpunkt der Verlinkung auf m\u0026ouml;gliche Rechtsverst\u0026ouml;\u0026szlig;e \u0026uuml;berpr\u0026uuml;ft. Rechtswidrige Inhalte waren zum Zeitpunkt der Verlinkung nicht erkennbar.\nEine permanente inhaltliche Kontrolle der verlinkten Seiten ist jedoch ohne konkrete Anhaltspunkte einer Rechtsverletzung nicht zumutbar. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Links umgehend entfernen.\n"
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]